import { BigNumber as BN, utils } from 'ethers';
import { CommonConstsType } from '../types';

const OVERRIDEN_STRING = 'TO BE OVERRIDEN';
const OVERRIDEN_INT = -1;
const RONE = BN.from(2).pow(40);
const ONE_DAY = BN.from(86400);
export const CommonConsts: CommonConstsType = {
  GOVERNANCE_MULTISIG: OVERRIDEN_STRING,
  TEAM_TOKENS_MULTISIG: OVERRIDEN_STRING,
  ECOSYSTEM_FUND_MULTISIG: OVERRIDEN_STRING,
  SALES_MULTISIG: OVERRIDEN_STRING,
  LIQUIDITY_INCENTIVES_MULTISIG: OVERRIDEN_STRING,
  FORGE_EMERGENCY_HANDLER: OVERRIDEN_STRING,
  MARKET_EMERGENCY_HANDLER: OVERRIDEN_STRING,
  LIQ_MINING_EMERGENCY_HANDLER: OVERRIDEN_STRING,
  TREASURY_MULTISIG: OVERRIDEN_STRING,
  MULTICALL_V2: OVERRIDEN_STRING,
  CHAIN_ID: OVERRIDEN_INT,

  GENERIC_MARKET_FACTORY_ID: utils.formatBytes32String('Generic'),

  FORGE_FEE: RONE.mul(3).div(100), // 3% forge fee
  SWAP_FEE: RONE.mul(1).div(100), // 1%
  PROTOCOL_SWAP_FEE: RONE.mul(15).div(100), // 15% of 1% = 0.15%
  EXPIRY_DIVISOR: ONE_DAY.mul(7),
  CURVE_SHIFT_DELTA: BN.from(0),
  LIQ_MINING_EPOCH_DURATION: ONE_DAY.mul(7),
  LIQ_MINING_VESTING_EPOCHS: BN.from(5),
  LOCK_NUMERATOR: BN.from(1),
  LOCK_DENOMINATOR: BN.from(360),
  INTEREST_UPDATE_RATE_DELTA_FOR_MARKET: BN.from(2).pow(40).div(10000),
};
